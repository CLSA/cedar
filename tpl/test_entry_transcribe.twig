{##
 # test_entry_transcribe.twig
 # 
 # Extends the base_record template for transcribing recordings.
 # @author Dean Inglis <inglisd@mcmaster.ca>
 #}
{% extends "base_record.twig" %}

{% block javascript %}

  {{ parent() }}

  <script type="text/javascript">

    function break_dialog() {
      confirm_dialog(
        "On a break",
        "<p>Close this window when you wish to end your break.</p>",
        function() {
          ajax_push( "typist", "end_break" );
        },
        false
      );
    }
  
    $( function () {

      // go on break button
      $( "#{{ widget.full }}__break" ).click( function() {
        if( ajax_push( "typist", "begin_break" ) ) break_dialog();
      } );

      {# show the break dialog if the operator is on break #}
      {% if on_break %}break_dialog();{% endif %}

      $( "#{{ widget.full }}__audio_status" ).change( function() {
        var state = $( "#{{ widget.full }}__audio_status option:selected" ).val();
        if( 'unavailable' == state ) {
          $( "#{{ widget.full }}_defer" ).click();
        }
        var args = new Object();
        args.columns = { audio_status : 'NULL' == state ? '' : state };
        args.id = {{ id }};
        if( ajax_push( "{{ widget.subject }}", "edit", args ) ) {
          if( 'unusable' == state ) {
            $( "#{{ widget.full }}_next" ).button( { disabled : false } );
            $( "#{{ widget.full }}_reset" ).button( { disabled : true } );
            $( "#{{ widget.full }}_defer" ).button( { disabled : true } );
          }
        }  
      } ); // end Audio Status change

      $( "#{{ widget.full }}__participant_status" ).change( function() {
        var state = $( "#{{ widget.full }}__participant_status option:selected" ).val();
        var args = new Object();
        args.columns = { participant_status : 'NULL' == state ? '' : state };
        args.id = {{ id }};
        if( ajax_push( "{{ widget.subject }}", "edit", args ) ) {
          if( 'refused' == state ) {
            $( "#{{ widget.full }}_next" ).button( { disabled : false } );
            $( "#{{ widget.full }}_reset" ).button( { disabled : true } );
            $( "#{{ widget.full }}_defer" ).button( { disabled : true } );
          }
        }
      } ); // end Participant Status change
      
      $("#{{ widget.full }}_quit").click( function() {
        slot_load( {{ slot }}, "assignment", "list" );
      } ); // end quit click

      $( "#{{ widget.full }}_defer" ).click( function() {

        $dialog = $( "#{{ widget.full }}__note_dialog" );
        var buttons = new Object;
        buttons.Ok = function() {
          var note = $("#{{ widget.full }}__note").val();
          if( 0 == note.length ) {
            error_dialog( "Error", "You cannot leave a blank note." );
          } else {
            var args = new Object();
            args.columns = { deferred : 1 };
            args.id = {{ id }};
            if( ajax_push( "{{ widget.subject }}", "edit", args ) ) {

              args = new Object();
              args.note = note;
              args.category = "{{ widget.subject }}";
              args.category_id = {{ id }};
              
              if( ajax_push( "note", "new", args ) ) {
                $dialog.dialog( "close" );

                $( "#{{ widget.full }}_next" ).button( { disabled : false } );
                $( "#{{ widget.full }}_reset" ).button( { disabled : true } );
                $( "#{{ widget.full }}_defer" ).button( { disabled : true } );

                slot_refresh( {{ slot }} );
              }
            }
          }
        };
        buttons.Cancel = function() {
          var note = $("#{{ widget.full }}__note").val();
          $audio_select = $( "#{{ widget.full }}__audio_status" );
          if( 0 == note.length && 'unavailable' == $audio_select.val() ) {
            error_dialog( "Error",
              "You cannot leave a blank note when setting audio status as unavaiable." +
              "Resetting audio state to the default unset state." );
            $audio_select.val( 'NULL' );
            $audio_select.change();
          }
          $dialog.dialog( "close" );
        };

        var html = "A note is required indicating the reason for deferral.";
        html += "<textarea id=\"{{ widget.full }}__note\"></textarea>";

        $dialog.html( html );

        $dialog.dialog( {
          closeOnEscape: true,
          title: "Deferral Note",
          modal: true,
          dialogClass: "alert",
          width: 450,
          buttons: buttons,
          beforeClose: function( event, ui ) { $(this).html( "" ); },
          open: function( event, ui ) { $( ".ui-dialog-titlebar-close", $(this).parent() ).hide(); }
        } );

      } ).button( { disabled : {{ deferred }} } ); // end defer click

      $( "#{{ widget.full }}_prev" ).click( function() {
        {% if 0 == prev_test_entry_id %}
          slot_load( {{ slot }}, "assignment", "list" );
        {% else %}
          slot_load( {{ slot }},
            "{{ widget.subject }}", "{{ widget.name }}",
            { id : {{ prev_test_entry_id}} } );
        {% endif %}
      } ).button( { disabled : 1 == {{ rank }} } ); // end prev click

      $( "#{{ widget.full }}_next" ).click( function() {
        {% if 0 == next_test_entry_id %}
          slot_load( {{ slot }}, "assignment", "list" );
        {% else %}
          slot_load( {{ slot }},
            "{{ widget.subject }}", "{{ widget.name }}",
            { id : {{ next_test_entry_id }} } );
        {% endif %}
      } ); // end next click

      $( "#{{ widget.full }}_reset" ).click( function() {
        if( ajax_push( "{{ widget.subject }}", "reset", { "id": {{ id }} } ) ) {
          slot_refresh( {{ slot }} );
        }
      } ); // end reset click

    } );
  </script>

{% endblock javascript %}

{% block record %}

  <div class="spacer"></div>

  <div>
    {% include [ 'test_entry_', test_type, '_transcribe.twig']|join with test_entry_args %}
  </div>

  <div class="spacer"></div>

  <div id="audio_control">
    {% if recording_data is defined %}
      <table>
        {% set recording_id = 0 %}
        {% for recording in recording_data %}
          <tr>
            <td>
              <audio controls>
                id="{{ widget.full }}__recording__{{ recording_id }}"
                <source src="{{ recording }}" type="audio/wav">
              </audio>
            </td>
          </tr>
          {% set recording_id = recording_id+1 %}
        {% endfor %}
      </table>
    {% endif %}
  </div>

  <div id="test_entry_status">
    <table style="width:25%">
      <tr>
        <td class="heading">Audio Status:</td>
        <td style="min-width:150px">
        <select id="{{ widget.full }}__audio_status"
          class="ui-state-default"
          style="width: 100%"
          {% if editable == 0 %}
            { disabled }
          {% endif %}>
          {% for status_id, status in audio_status_list %}
            {% set status_display = status is defined ? status : "" %}
            <option{{ audio_status == status_id ? ' selected' : '' }}
             value="{{ status_id }}">{{ status_display }}</option>
          {% endfor %}
        </select>
        </td>
      </tr>
      <tr>
        <td class="heading">Participant Status:</td>
        <td style=min-width:150px">
        <select id="{{ widget.full }}__participant_status"
          class="ui-state-default"
          style="width: 100%"
          {% if editable == 0 %}
            { disabled }
          {% endif %}>
          {% for status_id, status in participant_status_list %}
            {% set status_display = status is defined ? status : "" %}
            <option{{ participant_status == status_id ? ' selected' : '' }}
             value="{{ status_id }}">{{ status_display }}</option>
          {% endfor %}
        </select>
        </td>
      </tr>
    </table>
  </div>

  <div>
    {% if actionable == 1 %}
      <div style="min-width: 25%; float: left;">
        {% from 'macros.twig' import note_widget %}
        {{ note_widget( widget.full, 'test_entry', id, false, 'Notes' ) }}
        <button id="{{ widget.full }}__break"
          style="width: 200px;">Go on break</button>
      </div>
      {% from 'macros.twig' import confirm_buttons %}
        {{ confirm_buttons( slot, widget.full,
          ['defer', 'reset', 'prev', 'next', 'quit'], '', 'right', true ) }}
    {% endif %}     
  </div>

  <div id="{{ widget.full }}__note_dialog"></div>

{% endblock record %}
