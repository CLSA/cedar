{##
 # dictionary_import.twig
 # 
 # Used to upload participant CSV data files
 # @author Dean Inglis <inglisd@mcmaster.ca>
 #}
{% extends "widget.twig" %}

{% block javascript %}
  <script type="text/javascript" src="{{ constant('JS_URL') }}/md5.js"></script>
  <script type="text/javascript">
    $( function() {
      $( "#{{ widget.full }}__file" ).change( function() {
        var file = this.files[0];
        if( 0 == file.size ) {
          alert( "Unable to proceed, the file you selected is empty." );
          $(this).val( "" );
        }

        $( "#{{ widget.full }}__import" ).button( { disabled: "" == $(this).val() } );
      } ); // end change

      $( "#{{ widget.full }}__form" ).bind( "submit", function(e) {
        e.preventDefault();
        var file = document.getElementById( "{{ widget.full }}__file" ).files[0];
        ajax_push(
          "dictionary_import",
          "new",
          file,
          function( request ) {
            if( 200 == request.status ) {
              var reader = new FileReader();
              reader.onload = function(e) {
                md5 = hex_md5( e.target.result );
                var args = new Object();
                args.md5 = md5;
                args.dictionary_id = {{ id }};

                var results = ajax_pull("dictionary_import", "process", args );

                console.log(results);

                slot_load(
                  {{ slot }}, "{{ widget.subject }}", "{{ widget.name }}", { md5: md5 } );
              }
              reader.readAsBinaryString( file );
            }
          }
        );
      } );
        

      {% if md5 %}
        // cancel button
        $( "#{{ widget.full }}_cancel" ).click( function() {
          if( ajax_push( "dictionary_import", "delete", { id: "{{ id }}" } ) )
            alert("Cancelled");
            //slot_load( {{ slot }}, "dictionary", "list" );
        } );

        // proceed button
        $( "#{{ widget.full }}_proceed" ).click( function() {
          if( ajax_push( "dictionary_import", "process", { id: "{{ id }}" } ) )
            alert("Processed");
            //slot_load( {{ slot }}, "dictionary", "list" );
        } );
      {% endif %}
    } );
  </script>
{% endblock javascript %}

{% block widget %}
  <div class="ui-widget ui-widget-content app-widget-content">
    <div class="spacer">
      <p>
        Upload new words using a CSV (comma separated values) file where
        all words are enclosed by double quotes (&quot;). There must be 
        only two columns: a word column and a language code column. The 
        language code must be one of "en" (English) or "fr" (French). Files
        can be comprised of words of different languages ( e.g., one line of a 
        csv file could be  "curtain","en" ).
      </p>
    </div>
    <form id="{{ widget.full }}__form" action="" enctype="multipart/form-data">
      <input type="hidden" name="MAX_FILE_SIZE" value="64000000" />
      <table>
        <tr>
          <td class="heading">
            <span class="title">CSV file to import:</span>
          </td>
          <td class="content">
            <input type="file" 
                   id="{{ widget.full }}__file" name="file" />
          </td>
          <td class="content">
            <button id="{{ widget.full }}__import" style="width:150px;" disabled>Import</button>
          </td>
        </tr>
      </table>
    </form>
    {% if md5 %}
      {% from 'macros.twig' import confirm_buttons %}
      {{ confirm_buttons( slot, widget.full, ['cancel','proceed'], false, 'left', true ) }}
    {% endif %}  
  </div>
{% endblock widget %}

