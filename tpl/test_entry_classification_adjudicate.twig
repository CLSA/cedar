{##
 # test_entry_classfication_adjudicate.twig
 # 
 # Adjudicate a classification type test.
 # @author Dean Inglis <inglisd@mcmaster.ca>
 # @see base_view.twig for parameters
 #}
{% extends "widget.twig" %}

{% block javascript %}

  {{ parent() }}

  <script type="text/javascript">

    var table_selector = "#{{ widget.full }}__entry_table";

    function configure_ui() {
      var numFilled = $( table_selector + ' input:text[id$="adjudicate"][value!=""]' ).length;
      var numInput = $( table_selector + ' input:text[id$="adjudicate"]' ).length;
      var numChecked = $( table_selector + ' input:radio[value="accept"]:checked' ).length;
      // it is possible that some fields can be blank
      var disable = false;
      if( numFilled != numInput ) {
        disable = numChecked == numInput ? false : true;
      }
      $( "#{{ parent.full }}_Submit" ).button( { disabled : disable } );  
    }

    // overrides the default autocomplete filter function to search only from the beginning
    // of the string
    $.ui.autocomplete.filter = function ( array, term ) {
      var matcher = new RegExp( "^" + $.ui.autocomplete.escapeRegex( term ), "i" );
      return $.grep( array, function ( value ) {
        return matcher.test( value.label || value.value || value );
      } );
    };

    function get_text_complete() {
      var args = new Object();
      args["dictionary_id"] = {{ dictionary_id }};
      args["intrusion_dictionary_id"] = {{ intrusion_dictionary_id }};
      args["language"] = "{{ language }}";
      args["words_only"] = 1;  
      return ajax_pull( "word", "list", args );
    }

    $( function () {

      configure_ui();

      // find and handle radio input change events:
      // copy the progenitor to the adjudicate entry
      $( table_selector + ' input:radio[value="accept"]' ).change(
        function() {
          var entry_id = $(this).prop( "id" ).split( "__" )[0];
          var target_text_id = '#' + $(this).prop( "name" ) + "__adjudicate";
          var source_text_id = '#' + entry_id + "__candidate";
          var candidate = $( source_text_id ).val();
          $( target_text_id ).removeClass( "candidate intrusion variant" );
          $( target_text_id ).addClass( $( source_text_id ).prop( "class" ) );
          $( target_text_id ).val( candidate );
          $( target_text_id ).attr( "value", candidate );
          $( target_text_id ).prop( "name", $( source_text_id ).prop( "name" ) );
          $( target_text_id ).removeProp( "disabled" );

          // push the edit
          var args = new Object();
          var columns = new Object();
          args.id = $(this).prop( "name" );

          if( 0 == candidate.length ) {
            columns["word_id"] = '';
          } else {
            columns["word_candidate"] = candidate;
          }
          args.columns = columns;

          // push the edits
          if( ajax_push( "{{ widget.subject }}", "edit", args ) ) {
            // get the word
            if( 0 != candidate.length ) {
              var args = new Object();
              args.id = {{ test_id }};
              args["language"] = "{{ language }}";
              args["word_candidate"] = candidate;
              var classification = ajax_pull( "test", "classify_word", args );
              if( undefined != classification ) {
                $(this).addClass( classification );
              }
            }
            configure_ui();
          } else {
            alert( "Entry was not accepted, try again." );
            // clear the text entry and re-focus
            $(this).val( "" );
            $(this).attr( "value", "" );
            $(this).focus();
          }
        } )
      .click( function () {

        $( table_selector + ' input:checkbox[value="all"]' ).removeProp( "checked" );

      } );// end radio input change and click

      $( table_selector + ' input:text[id$="adjudicate"]' ).autocomplete( {
        source: get_text_complete(),
        minLength: 1,
        select: function( event, ui ) {
          $(this).val( ui.item.value );
        }
      } )
      .change( function() {
        // note that there is no ajax_push call to edit an entry:
        // a new entry is created when the submit button is clicked
        var id_1 = '#' + $(this).prop( "id" ).split( "__" )[0] + "__accept";
        var id_2 = '#' + $(this).prop( "id" ).split( "__" )[1] + "__accept";
        var text_id_1 = id_1.replace( "accept", "candidate" );
        var text_id_2 = id_2.replace( "accept", "candidate" );

        var candidate = $(this).val().trim().toLowerCase();
        // we've trimmed and lower-cased the candidate, so update the UI
        $(this).val( candidate );
        // update the value to present state
        $(this).attr( "value", candidate );
        $(this).removeClass( "intrusion variant" );

        if( 0 == candidate.length ) {

          alert( "Blank entry not permitted." );

          // refill with the corresponding accepted text entry
          if( $( id_1 ).prop( "checked" ) ) {
            $(this).val( $( text_id_1 ).val() );
            $(this).attr( "value", $(this).val() );
            $(this).addClass( $( text_id_1 ).prop( "class" ) );
            $(this).prop( "name", $( text_id_1 ).prop( "name" ) );
          } else if ( $( id_2 ).prop("checked") ) {
            $(this).val( $( text_id_2 ).val() );
            $(this).attr( "value", $(this).val() );
            $(this).addClass( $( text_id_2 ).prop( "class" ) );
            $(this).prop( "name", $( text_id_2 ).prop( "name" ) );
          } else {
            // disable this text input and uncheck the accept radio inputs
            $(this).prop( "disabled", "disabled" );
            $(this).prop( "name", "candidate" );
            $( id_1 ).removeProp( "checked" );
            $( id_2 ).removeProp( "checked" );
          }        
        } else {
          // uncheck the accept radio and checkbox inputs
          $( id_1 ).removeProp( "checked" );
          $( id_2 ).removeProp( "checked" );
          $( table_selector + ' input:checkbox[value="all"]' ).removeProp( "checked" );
          $(this).prop( "name", "candidate" );
          var args = new Object();
          args.id = {{ test_id }};
          args["language"] = "{{ language }}";
          args["word_candidate"] = candidate;
          var classification = ajax_pull( "test", "classify_word", args );
          if( undefined != classification ) {
            $(this).addClass( classification );
          }
        }

        configure_ui();
      } );// end text input change

      $( table_selector + ' input:checkbox[value="all"]' ).click( function() {
        // toggle check state of companion All checkbox
        $( table_selector + ' input:checkbox[value="all"]' ).not($(this)).removeProp( "checked" );
        $(this).prop( "checked", $(this).prop( "checked" ) );
        if( $(this).prop( "checked" ) ) {
          var id = $(this).prop( "id" ).split("__")[3];
          var radio_selector = table_selector + " div.radio__accept__" + id + " :radio";
          $( radio_selector ).prop( "checked", true ).trigger( "change" );
        } else {
         $( table_selector + ' input:radio[value="accept"]' ).removeProp( "checked" );
         $text_selector = $( table_selector + ' input:text[id$="adjudicate"]' ); 
         $text_selector.prop( "disabled", true );  
         // update previous and present state of value
         $text_selector.removeClass( "intrusion variant" );
         $text_selector.val( "" );  
         $text_selector.attr( "value", "" );  
         $text_selector.prop( "name", "candidate" );  
        }

        configure_ui();
      } );// end All checkbox click

    } );
  </script>

{% endblock javascript %}

{% block widget %}

  <div class="spacer"></div>

  {% if adjudicate_data is empty %}

    <caption style="text-align: left;">
      <strong>No adjudication required. Please press Prev, Next or Quit</strong>
    </caption>

  {% else %}

    <table id="{{ widget.full }}__entry_table"
           border="1">

      <thead>
        <tr style="height:40px">
          <th>Entry #</th>
          <th colspan="2">"{{ user_1 }}"</th>
          <th colspan="2">"{{ user_2 }}"</th>
          <th colspan="2">Adjudicate</th>
        </tr>
      </thead>

      <tbody>
      {% for entry in adjudicate_data %}
        <tr>
          <td class="heading" style="text-align:center">{{ entry.rank }}</td>

            {% set value_1 = '' %}
            {% set value_2 = '' %}
            {% set name_1 = 'candidate' %}
            {% set name_2 = 'candidate' %}

            {% if entry.word_id_1 is defined %}
              {% set value_1 = entry.word_1 %}
              {% set name_1 = entry.word_id_1 %}
            {% endif %}
            {% if entry.word_id_2 is defined %}
              {% set value_2 = entry.word_2 %}
              {% set name_2 = entry.word_id_2 %}
            {% endif %}

            <td>
              <input type="text"
                id="{{ entry.id_1 }}__candidate"
                {% if entry.classification_1 is defined %}
                  class="{{ entry.classification_1 }}"
                {% endif %}
                readonly
                name="{{ name_1 }}"
                value="{{ value_1 }}">
            </td>

            {% if entry.adjudicate is defined %}
            <td bgcolor=#B1F3B1>
              <div class="radio__accept__1">
                <input type="radio"
                  id="{{ entry.id_1 }}__accept"
                  name="{{ entry.id_3 }}"
                  value="accept">
                <label for="{{ entry.id_1 }}__accept">Accept</label>
              </div>
            </td>
            {% else %}
              <td></td>
            {% endif %}  

            <td>
              <input type="text"
                id="{{ entry.id_2 }}__candidate"
                {% if entry.classification_2 is defined %}
                  class="{{ entry.classification_2 }}"
                {% endif %}
                readonly
                name="{{ name_2 }}"
                value="{{ value_2 }}">
            </td>

            {% if entry.adjudicate is defined %}
            <td bgcolor=#B1F3B1>
              <div class="radio__accept__2">
                <input type="radio"
                  id="{{ entry.id_2 }}__accept"
                  name="{{ entry.id_3 }}"
                  value="accept">
                <label for="{{ entry.id_2 }}__accept">Accept</label>
              </div>
            </td>
            <td>
              <div class="adjudicate">
                <input type="text"
                  id="{{ entry.id_3 }}__adjudicate"
                  disabled
                  name="candidate"
                  value="">
              </div>
            </td>
            {% else %}
              <td></td><td></td>
            {% endif %}
        </tr>

      {% endfor %}

        <tr>
          <td colspan="2"></td>
          <td bgcolor=#B1F3B1>
            <input type="checkbox"
              id="{{ widget.full }}__accept__all__1"
              name="{{ widget.full }}__accept__all"
              value="all">
              <label for="{{ widget.full }}__accept__all__1">All</label>
          </td>
          <td></td>
          <td bgcolor=#B1F3B1>
            <input type="checkbox"
              id="{{ widget.full }}__accept__all__2"
              name="{{ widget.full }}__accept__all"
              value="all">
              <label for="{{ widget.full }}__accept__all__2">All</label>
          </td>
          <td colspan="3"></td>
        </tr>

      </tbody>
    </table>

  {% endif %}

{% endblock widget %}

